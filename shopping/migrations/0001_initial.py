# Generated by Django 5.2.3 on 2025-06-22 19:38

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("inventory", "0008_remove_inventoryitem_price_and_more"),
        ("recipes", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="store name")),
                (
                    "slug",
                    models.SlugField(blank=True, unique=True, verbose_name="slug"),
                ),
                ("address", models.TextField(blank=True, verbose_name="address")),
                (
                    "phone",
                    models.CharField(blank=True, max_length=20, verbose_name="phone"),
                ),
                ("website", models.URLField(blank=True, verbose_name="website")),
                (
                    "sections",
                    models.JSONField(
                        default=list,
                        help_text='List of store sections in order (e.g., ["Produce", "Dairy", "Meat", "Bakery"])',
                        verbose_name="store sections",
                    ),
                ),
                (
                    "store_type",
                    models.CharField(
                        choices=[
                            ("grocery", "Grocery Store"),
                            ("supermarket", "Supermarket"),
                            ("convenience", "Convenience Store"),
                            ("warehouse", "Warehouse Store"),
                            ("specialty", "Specialty Store"),
                            ("other", "Other"),
                        ],
                        default="grocery",
                        max_length=50,
                        verbose_name="store type",
                    ),
                ),
                (
                    "is_chain",
                    models.BooleanField(default=False, verbose_name="is chain store"),
                ),
                (
                    "chain_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="chain name"
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=10,
                        null=True,
                        verbose_name="latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=11,
                        null=True,
                        verbose_name="longitude",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "store",
                "verbose_name_plural": "stores",
                "db_table": "stores",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="RecurringShoppingItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="item name")),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3,
                        default=Decimal("1.000"),
                        max_digits=10,
                        verbose_name="quantity",
                    ),
                ),
                (
                    "unit",
                    models.CharField(blank=True, max_length=50, verbose_name="unit"),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("weekly", "Weekly"),
                            ("biweekly", "Bi-weekly"),
                            ("monthly", "Monthly"),
                            ("custom", "Custom"),
                        ],
                        default="weekly",
                        max_length=10,
                        verbose_name="frequency",
                    ),
                ),
                (
                    "custom_days",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(365),
                        ],
                        verbose_name="custom frequency (days)",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "last_added",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last added"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inventory.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring_shopping_items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "recurring shopping item",
                "verbose_name_plural": "recurring shopping items",
                "db_table": "recurring_shopping_items",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ShoppingList",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="list name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("shopping", "Shopping"),
                            ("completed", "Completed"),
                            ("archived", "Archived"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "generation_source",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("recipe", "Recipe"),
                            ("depletion", "Inventory Depletion"),
                            ("recurring", "Recurring Items"),
                            ("smart", "Smart Suggestions"),
                        ],
                        default="manual",
                        max_length=20,
                        verbose_name="generation source",
                    ),
                ),
                (
                    "shopping_started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="shopping started"
                    ),
                ),
                (
                    "shopping_completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="shopping completed"
                    ),
                ),
                (
                    "estimated_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="estimated total",
                    ),
                ),
                (
                    "actual_total",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="actual total",
                    ),
                ),
                (
                    "is_optimized",
                    models.BooleanField(
                        default=False, verbose_name="optimized for store layout"
                    ),
                ),
                (
                    "auto_update",
                    models.BooleanField(
                        default=True, verbose_name="auto-update from inventory"
                    ),
                ),
                (
                    "is_recurring",
                    models.BooleanField(default=False, verbose_name="recurring list"),
                ),
                (
                    "recurrence_interval",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(365),
                        ],
                        verbose_name="recurrence interval (days)",
                    ),
                ),
                (
                    "last_generated",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last generated"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_shopping_lists",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "household",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shopping_lists",
                        to="accounts.household",
                        verbose_name="household",
                    ),
                ),
            ],
            options={
                "verbose_name": "shopping list",
                "verbose_name_plural": "shopping lists",
                "db_table": "shopping_lists",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="ShoppingListShare",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "permission",
                    models.CharField(
                        choices=[
                            ("view", "View Only"),
                            ("edit", "Can Edit"),
                            ("admin", "Admin"),
                        ],
                        default="view",
                        max_length=10,
                        verbose_name="permission",
                    ),
                ),
                ("shared_at", models.DateTimeField(auto_now_add=True)),
                (
                    "shared_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shopping_shares_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shopping_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="shopping.shoppinglist",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "shopping list share",
                "verbose_name_plural": "shopping list shares",
                "db_table": "shopping_list_shares",
                "unique_together": {("shopping_list", "user")},
            },
        ),
        migrations.AddField(
            model_name="shoppinglist",
            name="shared_with",
            field=models.ManyToManyField(
                blank=True,
                related_name="shared_shopping_lists",
                through="shopping.ShoppingListShare",
                through_fields=("shopping_list", "user"),
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="shoppinglist",
            name="store",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="shopping_lists",
                to="shopping.store",
            ),
        ),
        migrations.CreateModel(
            name="ShoppingListItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="item name")),
                ("notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=3,
                        default=Decimal("1.000"),
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.001"))
                        ],
                        verbose_name="quantity",
                    ),
                ),
                (
                    "unit",
                    models.CharField(blank=True, max_length=50, verbose_name="unit"),
                ),
                (
                    "estimated_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="estimated price",
                    ),
                ),
                (
                    "actual_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=8,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="actual price",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="category"
                    ),
                ),
                (
                    "store_section",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="store section"
                    ),
                ),
                (
                    "section_order",
                    models.IntegerField(default=0, verbose_name="section order"),
                ),
                (
                    "custom_order",
                    models.IntegerField(default=0, verbose_name="custom order"),
                ),
                (
                    "is_purchased",
                    models.BooleanField(default=False, verbose_name="purchased"),
                ),
                (
                    "purchased_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="purchased at"
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="priority",
                    ),
                ),
                (
                    "is_recurring",
                    models.BooleanField(default=False, verbose_name="recurring item"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "added_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="added_shopping_items",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shopping_list_items",
                        to="inventory.product",
                    ),
                ),
                (
                    "shopping_list",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="shopping.shoppinglist",
                    ),
                ),
                (
                    "source_recipe",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shopping_list_items",
                        to="recipes.recipe",
                    ),
                ),
            ],
            options={
                "verbose_name": "shopping list item",
                "verbose_name_plural": "shopping list items",
                "db_table": "shopping_list_items",
                "ordering": ["section_order", "custom_order", "name"],
                "indexes": [
                    models.Index(
                        fields=["shopping_list", "is_purchased"],
                        name="shopping_li_shoppin_5b27ac_idx",
                    ),
                    models.Index(
                        fields=["section_order", "custom_order"],
                        name="shopping_li_section_0791d2_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="shoppinglist",
            index=models.Index(
                fields=["created_by", "status"], name="shopping_li_created_8eea99_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shoppinglist",
            index=models.Index(
                fields=["store", "status"], name="shopping_li_store_i_9dc639_idx"
            ),
        ),
    ]
